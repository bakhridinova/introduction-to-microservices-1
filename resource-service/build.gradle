plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.+'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

version = '1.0.0'
group = 'com.epam.learn'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenLocal()
    mavenCentral()
}

bootJar {
    mainClass = 'com.epam.learn.resource.ResourceApplication'
}

ext {
    lombokVersion = '1.18.+'
    postgresVersion = '42.7.4'
    springdocVerison = '2.0.2'
    songClientVersion = '1.0.0'
    apacheTikaVersion = '1.28.+'
    springCloudVersion = "2023.0.2"
}

dependencies {
    // Sprig Boot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    // Spring Cloud
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client'
    implementation group:'org.springframework.cloud', name: 'spring-cloud-starter-loadbalancer'

    // PostgreSQL
    implementation group: 'org.postgresql', name: 'postgresql', version: "${postgresVersion}"

    // Swagger-UI
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: "${springdocVerison}"

    // Tika
    implementation group: 'org.apache.tika', name: 'tika-core', version: "${apacheTikaVersion}"
    implementation group: 'org.apache.tika', name: 'tika-parsers', version: "${apacheTikaVersion}"

    // Lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}